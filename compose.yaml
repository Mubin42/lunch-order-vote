version: '3.7'

services:
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    ports:
      - 3000:3000
    environment:
      - .env
    restart: always
    depends_on:
      - backend
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000 || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    ports:
      - '5000:5000'
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres?schema=public
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:5000/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    container_name: db
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5433:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata: {}
